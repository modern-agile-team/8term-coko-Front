name: CI/CD Docker

on:
  push:
    branches: [setting/#77/Applying_https_using_Nginx]

env:
  DOCKER_IMAGE: ghcr.io/${{ github.actor }}/react-auto-deploy
  VERSION: ${{ github.sha }}
  NAME: go_cicd

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      # 1. 리포지토리 체크아웃
      - uses: actions/checkout@v3

      # 2. Node.js 환경 설정 및 의존성 설치
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - run: npm install

      # 3. 빌드 실행
      - run: npm run build

      # 4. dist 폴더를 Docker 컨텍스트로 복사
      - name: Prepare Docker context
        # 4. dist 폴더를 Docker 컨텍스트로 복사
        run: |
          mkdir -p docker-context
          cp -r ./dist ./docker-context/
          cp ./Dockerfile ./docker-context/

      # 5. Docker Buildx 설정
      - name: Set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.VERSION }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # 6. Docker 이미지 빌드 및 푸시
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.actor == 'bluetree7878' && secrets.bluetree7878_GHCR_TOKEN || secrets.rhehfl_ghcr_token }}

      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ./docker-context # Docker 컨텍스트 설정
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:latest

  deploy:
    needs: build
    name: Deploy
    runs-on: [self-hosted, label-go]
    steps:
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.actor == 'bluetree7878' && secrets.bluetree7878_GHCR_TOKEN || secrets.rhehfl_ghcr_token }}

      - name: Docker run
        run: |
          docker stop ${{ env.NAME }} || true
          docker rm ${{ env.NAME }} || true
          docker rmi ${{ env.DOCKER_IMAGE }}:latest || true
          docker run --env-file /home/ec2-user/.env \
            -v /etc/nginx/nginx.conf:/etc/nginx/conf.d/default.conf \ # Nginx 설정 파일 마운트
            -d -p 8080:80 \
            --name ${{ env.NAME }} \
            --restart always \
            ${{ env.DOCKER_IMAGE }}:latest
